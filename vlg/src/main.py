import argparse
import networkx as nx

def parse_args():
    desc =          """
                    Benchmarks communities on Caveman graphs generated by
                    the networkx python library. The code used to find the number of
                    communities is accessible at
                    https://sites.google.com/site/findcommunities/
                    """
    presetArgHelp = """
                    Specifies the preset to use. Presets are composed of several
                    cople (n, k), with n the number of cliques and k the size of
                    the clique. A vslow preset will be very long to compute compared
                    to a vfast one. Existing presets are any of the following:\n
                    vfast - fast - medium - slow - vslow
                    """
    nmaxArgHelp =   """
                    Specifies the max number of clique used by the benchmark.
                    """
    kmaxArgHelp =   """
                    Specifies the max size of each clique used by the benchmark.
                    """
    nstepArgHelp =  """
                    Specifies the step when benchmarking the n argument.
                    """
    kstepArgHelp =  """
                    Specifies the step when benchmarking the k argument.
                    """

    parser = argparse.ArgumentParser(description=desc)
    parser.add_argument('-p', '--preset', help=presetArgHelp, required=False)
    parser.add_argument('-nmax', '--n-max', help=nmaxArgHelp, required=False)
    parser.add_argument('-kmax', '--k-max', help=kmaxArgHelp, required=False)
    parser.add_argument('-nstep', '--n-step', help=nstepArgHelp, required=False)
    parser.add_argument('-kstep', '--k-step', help=kstepArgHelp, required=False)

    return parser.parse_args()

if __name__ == "__main__":

    args = parse_args()
    

    # G = nx.connected_caveman_graph(3, 3)